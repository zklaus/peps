PEP: 790
Title: New environment markers for modern Python environments
Author: Klaus Zimmermann <klaus.zimmermann@quansight.com>
Sponsor: <name of sponsor>
PEP-Delegate: <PEP delegate's name>
Discussions-To: https://discuss.python.org/t/environment-marker-for-free-threading/60007
Status: Draft
Type: Standards Track
Topic: Packaging
Created: 21-Feb-2025
Python-Version: 3.14
Post-History: <REQUIRED: dates, in dd-mmm-yyyy format, and corresponding links to PEP discussion threads>

.. If adopted, the contents of this pep should be integrated into the canonical
   documentation in the Python Packaging User Guide and the following
   directive should be added here:
.. .. canonical-pypa-spec:: :ref:`packaging:dependency-specifiers`

Abstract
========

This PEP proposes new environment markers for package dependencies.
:pep:`508` (later moved to :ref:`packaging:dependency-specifiers`) introduced
environment markers to specify dependencies based on a rule that describes
when the dependency should be used.
This PEP extends the environment markers to allow specifying dependencies
based on the threading model of the Python interpreter.

Motivation
==========

:pep:`508` established environment markers to specify dependencies based on
environment conditions.
Since its adoption in 2015, the Python ecosystem has evolved and new features
warrant their own environment markers.
One such feature is the introduction of Python interpreters without the Global
Interpreter Lock (GIL), which allows for free threading.
This PEP proposes to extend the environment markers to allow specifying
dependencies based on whether the Python interpreter is free threading or not.


Rationale
=========

The intention of this PEP is to introduce its core features with minimal impact
on the existing ecosystem.
The existing grammar proposed in :pep:`508` lends itself to a straightforward
extension to include the new environment marker.
However, it requires an explicit comparison operator and comparison value,
which, for the proposed boolean extension, could arguably be omitted;
Instead, we opt here for explicit comparison with the boolean string
representations ``"True"`` and ``"False"`` to maintain the simple grammar.


Specification
=============

Examples
--------

Dependencies can be marked as required for a free threading build of python
using the following syntax::

    cython; free_threading == "True"

or, explicitly for a non-free threading build::

    cython; free_threading == "False"

Concepts
--------

The ``free_threading`` marker will be replaced with the ``str`` representation
of a boolean signifiying whether the Python interpreter is built with free
threading support.

Grammar
-------

The grammar laid out in :pep:`508` and maintained in the
:ref:`packaging:dependency-specifiers` will be extended to include the
``free_threading`` marker by augmenting the definition of ``env_var`` as
follows::

    env_var       = ('python_version' | 'python_full_version' |
                     'os_name' | 'sys_platform' | 'platform_release' |
                     'platform_system' | 'platform_version' |
                     'platform_machine' | 'platform_python_implementation' |
                     'implementation_name' | 'implementation_version' |
                     'free_threading' |
                     'extra' # ONLY when defined by a containing layer
                     )


Environment Markers
-------------------

Like the grammar, also the overview table of environment markers in
:ref:`packaging:dependency-specifiers` will be augmented to add the following
row:

.. list-table::
    :header-rows: 1

    * - Marker
      - Python equivalent
      - Sample values
    * - ``free_threading``
      - ``str("t" in sys.abiflags)``
      - ``"True"``, ``"False"``

Backwards Compatibility
=======================

This is a pure extension to the existing environment markers and does not
affect existing environment markers or dependency specifications, hence the
change is fully backwards compatible.

How to Teach This
=================

The use of environment markers is well established and communicated chiefly
in :ref:`packaging:dependency-specifiers`.
The new environment marker can be introduced in the same document.
Additionally, both for package authors and users free-threading specific
guidance can be provided at the `Python free-threading guide`_.


Reference Implementation
========================

The reference implementation consists purely in an updated version of the
`packaging` library.
The implementation is available at
https://github.com/zklaus/packaging/tree/env-marker-free-threading.
A demonstration package is available at
https://github.com/zklaus/env-marker-example.

Rejected Ideas
==============

In an early discussion of the topic (`Environment marker for free-threading`_),
the idea of a general extension mechanism for environment markers was brought
up; in the interest of simplicity, this is left for a possible future PEP.


Open Issues
===========

[Any points that are still being decided/discussed.]


Footnotes
=========

[A collection of footnotes cited in the PEP, and a place to list non-inline hyperlink targets.]

.. _Python free-threading guide: https://py-free-threading.github.io/
.. _Environment marker for free-threading: https://discuss.python.org/t/environment-marker-for-free-threading/60007


Copyright
=========

This document is placed in the public domain or under the
CC0-1.0-Universal license, whichever is more permissive.
