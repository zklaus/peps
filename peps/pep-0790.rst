PEP: 790
Title: <REQUIRED: pep title>
Author: Klaus Zimmermann <klaus.zimmermann@quansight.com>
Sponsor: <name of sponsor>
PEP-Delegate: <PEP delegate's name>
Discussions-To: https://discuss.python.org/t/environment-marker-for-free-threading/60007
Status: Draft
Type: Standards Track
Topic: Packaging
Created: 21-Feb-2025
Python-Version: 3.14
Post-History: <REQUIRED: dates, in dd-mmm-yyyy format, and corresponding links to PEP discussion threads>

Abstract
========

This PEP proposes new environment markers for package dependencies.
:pep:`508` introduced environment markers to specify dependencies based on the Python implementation and version.
This PEP extends the environment markers to allow specifying dependencies based on the threading model of the Python interpreter.



Motivation
==========

:pep:`508` established environment markers to specify dependencies based on environment conditions.
However, it does not provide a way to specify dependencies based on the threading model of the Python interpreter.
This PEP proposes to extend the environment markers to allow specifying dependencies based on the threading model of the Python interpreter.


Rationale
=========

[Describe why particular design decisions were made.]


Specification
=============

Examples
--------

Dependencies can be marked as required for a free threading build of python using the following syntax::

    cython; free_threading == "True"

or, explicitly for a non-free threading build::

    cython; free_threading == "False"

Concepts
--------

The `free_threading` marker will be replaced with the `str` representation of a boolean signifiying whether the Python interpreter is built with free threading support.

Grammar
-------

The grammar laid out in :pep:`508` and maintained in the `Python Packaging Guide <https://packaging.python.org/en/latest/specifications/dependency-specifiers/#dependency-specifiers>`_ will be extended to include the `free_threading` marker by augmenting the definition of `env_var` as follows::

    env_var       = ('python_version' | 'python_full_version' |
                     'os_name' | 'sys_platform' | 'platform_release' |
                     'platform_system' | 'platform_version' |
                     'platform_machine' | 'platform_python_implementation' |
                     'implementation_name' | 'implementation_version' |
                     'free_threading' |
                     'extra' # ONLY when defined by a containing layer
                     )


Environment Markers
-------------------

Like the grammar, also the overview table of environment markers in the Python Packaging Guide will be augmented to add the following row:

.. list-table::
    :header-rows: 1

    * - Marker
      - Python equivalent
      - Sample values
    * - ``free_threading``
      - ``str("t" in sys.abiflags)``
      - ``True``, ``False``

Backwards Compatibility
=======================

This is a pure extension to the existing environment markers and does not affect existing environment markers or dependency specifications.

Security Implications
=====================

[How could a malicious user take advantage of this new feature?]


How to Teach This
=================

[How to teach users, new and experienced, how to apply the PEP to their work.]


Reference Implementation
========================

The reference implementation consists purely in an updated version of the `packaging` library.
The implementation is available at https://github.com/zklaus/packaging/tree/env-marker-free-threading.
A demonstration package is available at https://github.com/zklaus/env-marker-example.

Rejected Ideas
==============

[Why certain ideas that were brought while discussing this PEP were not ultimately pursued.]


Open Issues
===========

[Any points that are still being decided/discussed.]


Footnotes
=========

[A collection of footnotes cited in the PEP, and a place to list non-inline hyperlink targets.]


Copyright
=========

This document is placed in the public domain or under the
CC0-1.0-Universal license, whichever is more permissive.
